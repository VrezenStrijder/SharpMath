<Window x:Class="SharpMath.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SharpMath.UI"
        xmlns:vm="clr-namespace:SharpMath.UI.ViewModels"
        xmlns:avalonEdit ="http://icsharpcode.net/sharpdevelop/avalonedit"
        mc:Ignorable="d"
        Title="数学工具" Height="800" Width="1080">
    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        <Style TargetType="Button" x:Key="OperatorButton">
            <Setter Property="Width" Value="26"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="24"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="Margin" Value="5,0,5,0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" MinWidth="200"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Left Panel: Controls -->
        <Border Grid.Column="0" Background="#f0f0f0" Padding="10">
            <StackPanel>
                <GroupBox Header="操作类型" FontWeight="Bold">
                    <ComboBox ItemsSource="{Binding CalculateList}" SelectedItem="{Binding SelectedCalculateType, Mode=TwoWay}"  Margin="5"  />
                </GroupBox>

                <!-- 矩阵操作 -->
                <GroupBox Header="矩阵操作" FontWeight="Bold" Margin="0,15,0,0"
                          Visibility="{Binding IsMatrixMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel>
                        <TextBlock Text="单矩阵运算:" FontWeight="SemiBold" Margin="0,0,0,5"
                                   Visibility="{Binding IsSingleMatrixMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <Button Content="行列式" Command="{Binding SolveDeterminantCommand}" IsEnabled="{Binding CanCalculateDeterminant}" Margin="0,2"/>
                        <Button Content="转置" Command="{Binding SolveTransposeCommand}" Margin="0,2"/>
                        <Button Content="迹" Command="{Binding SolveTraceCommand}" IsEnabled="{Binding CanCalculateTrace}" Margin="0,2"/>
                        <Button Content="秩" Command="{Binding SolveRankCommand}" Margin="0,2"/>
                        <Button Content="逆矩阵" Command="{Binding SolveInverseCommand}" IsEnabled="{Binding CanCalculateInverse}" Margin="0,2"/>
                        <Button Content="幂(A²)" Command="{Binding SolvePowerCommand}" IsEnabled="{Binding CanCalculatePower}" Margin="0,2"/>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="变量代入" FontWeight="Bold" Margin="0,15,0,0"
                          Visibility="{Binding IsSubstitutionPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel>
                        <ItemsControl ItemsSource="{Binding VariablesToSubstitute}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0,3">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="{Binding Name}" Grid.Column="0" FontWeight="SemiBold" VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" VerticalAlignment="Center"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <Button Content="运算" Command="{Binding CalculateWithValuesCommand}" Margin="0,10,0,0" Padding="5"/>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="异常信息" Margin="0,15,0,0">
                    <TextBlock Text="{Binding ErrorMessage}" Foreground="Red" FontWeight="Bold" Margin="0,5,0,0" TextWrapping="Wrap"/>
                </GroupBox>
            </StackPanel>
        </Border>

        <!-- Right Panel: Interaction -->
        <Grid Grid.Column="1" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Input Area -->
            <StackPanel Grid.Row="0">
                <!-- 矩阵生成区 -->
                <Border Padding="10" Margin="0,0,0,10" Background="#f8f9fa" CornerRadius="5" BorderBrush="#dee2e6" BorderThickness="1"
                    Visibility="{Binding IsMatrixMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Operator Panel -->
                        <StackPanel Grid.Column="0" VerticalAlignment="Top" Margin="0,0,15,0">
                            <TextBlock Text="操作符" FontWeight="Bold" Margin="0,0,0,5"/>
                            <WrapPanel Width="180">
                                <Button Content="+" Style="{StaticResource OperatorButton}" ToolTip="矩阵加法" Command="{Binding AppendToMatrixExpressionCommand}" CommandParameter=" + " />
                                <Button Content="-" Style="{StaticResource OperatorButton}" ToolTip="矩阵减法" Command="{Binding AppendToMatrixExpressionCommand}" CommandParameter=" - "/>
                                <Button Content="⊙" Style="{StaticResource OperatorButton}" ToolTip="点乘 (Hadamard Product)" Command="{Binding AppendToMatrixExpressionCommand}" CommandParameter=" ⊙ "/>
                                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="3,0"/>
                                <Button Content="(" Style="{StaticResource OperatorButton}" Command="{Binding AppendToMatrixExpressionCommand}" CommandParameter="("/>
                                <Button Content=")" Style="{StaticResource OperatorButton}" Command="{Binding AppendToMatrixExpressionCommand}" CommandParameter=")"/>
                            </WrapPanel>
                            <Separator Margin="0,5"/>
                            <StackPanel Orientation="Horizontal">
                                <RadioButton Content="数乘" IsChecked="{Binding IsScalarMultiply, Mode=TwoWay}" />
                                <TextBox Text="{Binding ScalarValue}" Width="30" Margin="0" IsEnabled="{Binding IsScalarMultiply}"/>
                                <RadioButton Content="叉乘" IsChecked="{Binding IsScalarMultiply, Mode=TwoWay, Converter={StaticResource InverseBooleanConverter}}" Margin="5,0,10,0" />
                                <Button Content="×" Style="{StaticResource OperatorButton}" ToolTip="矩阵乘法" Command="{Binding AppendToMatrixExpressionCommand}" CommandParameter=" × "/>
                            </StackPanel>

                            <Separator Margin="0,5"/>
                            <TextBlock Text="矩阵函数" FontWeight="Bold" Margin="0,5,0,5"/>
                            <WrapPanel>
                                <Button Content="ᵀ" Style="{StaticResource OperatorButton}" ToolTip="转置 (Transpose)" Command="{Binding AppendToMatrixExpressionCommand}" CommandParameter="trans" Padding="0,0,-15,5"/>
                                <Button Content="⁻¹" Style="{StaticResource OperatorButton}" ToolTip="求逆 (Inverse)" Command="{Binding AppendToMatrixExpressionCommand}" CommandParameter="inverse" Padding="0,0,-10,5"/>
                                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="3,0"/>
                                <StackPanel Orientation="Horizontal">
                                    <Button Content="^" Style="{StaticResource OperatorButton}" ToolTip="幂运算" Command="{Binding AppendToMatrixExpressionCommand}" CommandParameter=" ^ "/>
                                    <TextBox Text="{Binding PowerValue}" Width="30" VerticalAlignment="Center"/>
                                </StackPanel>
                            </WrapPanel>
                        </StackPanel>

                        <!-- Matrix List Panel -->
                        <StackPanel Grid.Column="1">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5">
                                <TextBox Text="{Binding MatrixRows}" Width="40" TextAlignment="Center"/>
                                <Label Content="x" VerticalAlignment="Center"/>
                                <TextBox Text="{Binding MatrixCols}" Width="40" TextAlignment="Center"/>
                                <Button Content="生成矩阵" Command="{Binding AddMatrixToListCommand}" Margin="10,0,10,0" Padding="8,4" />
                                <Button Content="↰回退" Command="{Binding RemoveMatrixElementCommand}" Margin="0,0,10,0" Padding="8,4" />
                                <Button Content="清空" Command="{Binding ClearMatrixWorkspaceCommand}" HorizontalAlignment="Right" Padding="8,4"/>
                            </StackPanel>
                            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" MaxHeight="150" Padding="5" >
                                <ItemsControl ItemsSource="{Binding MatrixList}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <StackPanel Margin="5,0,5,0">
                                                    <Button Command="{Binding DataContext.AppendToMatrixExpressionCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding Name}" FontWeight="Bold" Background="LightBlue" BorderThickness="0">
                                                        <TextBlock Text="{Binding Name}" FontWeight="Bold" HorizontalAlignment="Center"/>
                                                    </Button>
                                                    <TextBox Text="{Binding MatrixText, UpdateSourceTrigger=PropertyChanged}" Width="120" Height="80" AcceptsReturn="True" FontFamily="Consolas" VerticalScrollBarVisibility="Auto" Margin="0"/>
                                                </StackPanel>
                                                <Button Content="×" Command="{Binding DataContext.DeleteMatrixCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}" VerticalAlignment="Top" 
                                                        HorizontalAlignment="Right" Width="18" Height="18" Padding="0" Margin="5,0,5,0" FontSize="12" Foreground ="#d37a83" Background="Transparent" BorderThickness="0"  ToolTip="删除矩阵"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding MatrixExpressionText, Mode=OneWay}" IsReadOnly="True" FontWeight="Bold" Background="#e9ecef" Margin="5" Padding="5" TextWrapping="Wrap"/>
                                <Button Grid.Column="1" Content="清除" Command="{Binding ResetMatrixCommand}" HorizontalAlignment="Right" Margin="5" Padding="8,4" />
                                <Button Grid.Column="2" Content="生成" Command="{Binding ApplyMatrixCommand}" HorizontalAlignment="Right" Margin="5" Padding="8,4" />
                            </Grid>

                        </StackPanel>

                    </Grid>
                </Border>

                <!-- 方程组输入区 -->
                <Border Padding="5" Margin="0,0,0,10" Background="#eef" CornerRadius="3"
                        Visibility="{Binding IsEquationSystemMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Text="{Binding SingleEquationInput, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"
                                 ToolTip="在此输入单个方程，然后点击添加"/>
                        <Button Grid.Column="1" Content="添加方程" Command="{Binding AddEquationToSystemCommand}" Margin="5,0,0,0" Padding="8,4"/>
                    </Grid>
                </Border>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Margin="0,0,5,0">
                        <Label Content="文本表达式输入:" FontWeight="Bold"/>
                        <TextBox Text="{Binding InputExpressionText, UpdateSourceTrigger=PropertyChanged}" MinHeight="80" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap"
                                 IsReadOnly="{Binding IsEquationSystemMode}"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Margin="5,0,0,0">
                        <Label Content="LaTeX 表达式输入:" FontWeight="Bold"/>
                        <TextBox Text="{Binding LatexInputExpressionText, UpdateSourceTrigger=PropertyChanged}" MinHeight="80" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap"/>
                    </StackPanel>
                </Grid>
                <StackPanel Orientation="Horizontal" Margin="0,10,0,10">
                    <Button Content="化简或计算" Command="{Binding SolveCommand}" Padding="10,5" IsDefault="True" Margin="5,0,20,0" Height="30"/>
                    <Border BorderBrush="LightBlue" BorderThickness="0.5" Background="White">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <Canvas Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}" Background="White">
                                <!-- 渲染的数学公式图像 -->
                                <Image Source="{Binding RenderedImage}" Stretch="None" Canvas.Left="0" Canvas.Top="0"
                           Visibility="{Binding HasRenderError, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}"/>
                                <!-- 错误信息显示 -->
                                <TextBlock Text="{Binding RenderErrorMessage}" Foreground="Red" FontSize="12" Canvas.Left="10" Canvas.Top="10"
                               Visibility="{Binding HasRenderError, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </Canvas>
                        </ScrollViewer>
                    </Border>
                </StackPanel>
            </StackPanel>

            <!-- Output Area -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Text Output -->
                <GroupBox Header="文本输出" Grid.Column="0" Margin="0,0,5,0">
                    <avalonEdit:TextEditor Document="{Binding TextOutput, Converter={StaticResource AvalonEditDocumentConverter}}" ShowLineNumbers="True" FontFamily="Consolas" FontSize="14" SyntaxHighlighting="C#">
                        <avalonEdit:TextEditor.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="清空" Command="{Binding ClearTextOutputCommand}"/>
                                <MenuItem Header="格式化" Command="{Binding FormatTextOutputCommand}"/>
                            </ContextMenu>
                        </avalonEdit:TextEditor.ContextMenu>
                    </avalonEdit:TextEditor>
                </GroupBox>

                <!-- LaTeX Output -->
                <GroupBox Header="LaTeX 输出" Grid.Column="1" Margin="5,0,0,0">
                    <avalonEdit:TextEditor Document="{Binding LatexOutput, Converter={StaticResource AvalonEditDocumentConverter}}" ShowLineNumbers="True" FontFamily="Consolas" FontSize="14" SyntaxHighlighting="TeX">
                        <avalonEdit:TextEditor.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="清空" Command="{Binding ClearLatexOutputCommand}"/>
                                <MenuItem Header="格式化" Command="{Binding FormatLatexOutputCommand}"/>
                            </ContextMenu>
                        </avalonEdit:TextEditor.ContextMenu>
                    </avalonEdit:TextEditor>
                </GroupBox>
            </Grid>
        </Grid>
    </Grid>

</Window>
